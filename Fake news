import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.metrics import accuracy_score, confusion_matrix

# Load the dataset (replace with your dataset path)
news_df = pd.read_csv('news.csv')

# Separate the labels and the news text
labels = news_df.label
news = news_df.text

# Split the dataset into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(news, labels, test_size=0.2, random_state=7)

# Create a TfidfVectorizer
tfidf_vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)

# Fit and transform the training data
tfidf_train = tfidf_vectorizer.fit_transform(x_train)

# Transform the test data
tfidf_test = tfidf_vectorizer.transform(x_test)
            
# Create a PassiveAggressiveClassifier
pac = PassiveAggressiveClassifier(max_iter=50)

# Fit the classifier to the training data
pac.fit(tfidf_train, y_train)

# Predict on the test data
y_pred = pac.predict(tfidf_test)

# Calculate the accuracy
score = accuracy_score(y_test, y_pred)
print(f'Accuracy: {round(score*100,2)}%')

# Generate the confusion matrix
confusion_matrix(y_test, y_pred, labels=['FAKE','REAL'])
